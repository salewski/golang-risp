(namespace test)

(defconst color-reset "\x1B[00m")
(defconst color-red "\x1B[31m")
(defconst color-green "\x1B[32m")

(def tests (list))

(defun color (color data) (cat color data color-reset))

(defun add (name input output)
	(list:push &tests (list :name name :input input :output output :status 0)))

(defun run ()
	(for &tests (test)
		(if (= (eval (list:get-key test :input)) (list:get-key test :output))
			(list:set-key &test :status 1))))

(defun print-results ()
	(for tests (test)
		(println
			(string:format "~\t~" (list:get-key test :name) (case (list:get-key test :status)
				(1) (color color-green "Passed")
				(0) (color color-red "Failed"))))))

(export add run print-results)