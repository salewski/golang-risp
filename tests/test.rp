; testing library for risp
(namespace test)

(defconst color-reset "\x1B[00m")
(defconst color-red "\x1B[31m")
(defconst color-green "\x1B[32m")

(defun color (color data) (cat color data color-reset))

(defconst status-failed 0)
(defconst status-success 1)

; adds a test to a given test list
(defun add (tests name input output)
	(list:push &tests
		(list :name name :input input :input-ran nil :output output :status status-failed)))

; runs the tests and stores the result
(defun run (tests)
	(for &tests (test) (
		(list:set-key &test :input-ran (eval (list:get-key test :input)))
		(if (= (list:get-key test :input-ran) (list:get-key test :output))
			(list:set-key &test :status status-success)))))

(defun print-failed (test) (
	(println "\tExpected")
	(println (string:format "\t~" (list:get-key test :output)))
	(println "\tGot")
	(println (string:format "\t~" (list:get-key test :input-ran)))))

; prints out the results of the tests
(defun print-results (tests)
	(for &tests (test) (
		(println
			(string:format "~\t~" (list:get-key test :name) (case (list:get-key test :status)
				(status-success) (color color-green "Passed")
				(status-failed) (color color-red "Failed"))))
		(if (= (list:get-key test :status) status-failed) (print-failed &test)))))

(export add run print-results)